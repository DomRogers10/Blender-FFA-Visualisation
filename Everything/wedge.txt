import bpy
import math

r0 = 5
r1 = 10
phi0 = 0
phi1 = 30
phi0 = math.radians(phi0)
phi1 = math.radians(phi1)
h = 2

def print(data):
    for window in bpy.context.window_manager.windows:
        screen = window.screen
        for area in screen.areas:
            if area.type == 'CONSOLE':
                override = {'window': window, 'screen': screen, 'area': area}
                bpy.ops.console.scrollback_append(override, text=str(data), type="OUTPUT")

bpy.ops.object.select_all(action='SELECT')
bpy.ops.object.delete()


lower = [r0 * math.cos(phi0), r0 * math.sin(phi0), 0], [r0 * math.cos(phi1), r0 * math.sin(phi1), 0], [r1 * math.cos(phi0), r1 * math.sin(phi0), 0], [r1 * math.cos(phi1), r1 * math.sin(phi1), 0]
upper = [r0 * math.cos(phi0), r0 * math.sin(phi0), 2], [r0 * math.cos(phi1), r0 * math.sin(phi1), 2], [r1 * math.cos(phi0), r1 * math.sin(phi0), 2], [r1 * math.cos(phi1), r1 * math.sin(phi1), 2]

try:
    vertices = [[r0 * math.cos(phi0), r0 * math.sin(phi0), 0], [r0 * math.cos(phi1), r0 * math.sin(phi1), 0], [r1 * math.cos(phi0), r1 * math.sin(phi0), 0], [r1 * math.cos(phi1), r1 * math.sin(phi1), 0], [r0 * math.cos(phi0), r0 * math.sin(phi0), 2], [r0 * math.cos(phi1), r0 * math.sin(phi1), 2], [r1 * math.cos(phi0), r1 * math.sin(phi0), 2], [r1 * math.cos(phi1), r1 * math.sin(phi1), 2]]
    edges = []
    faces = [[0, 1, 3, 2], [0, 4, 6, 2], [0, 1, 5, 4], [1, 3, 7, 5], [2, 3, 7, 6], [4, 5, 7, 6]]
    mesh = bpy.data.meshes.new('new_mesh')

    mesh.from_pydata(vertices, edges, faces)
    mesh.update()

    object = bpy.data.objects.new("Object", mesh)

    collection = bpy.data.collections.new("Collection")
    bpy.context.scene.collection.children.link(collection)

    collection.objects.link(object)
except Exception as e:
    print(e)
